apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}
  labels:
    app.kubernetes.io/name: {{ template "hazeltest.name" . }}
    app.kubernetes.io/version: {{ .Chart.AppVersion }}
    app.kubernetes.io/instance: {{ .Release.Name }}
spec:
  replicas: {{ .Values.replicaCount }}
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ template "hazeltest.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ template "hazeltest.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
      # Make sure Hazeltest Pods restart whenever a new Helm release is installed
      # -> Ensures changes made to ConfigMap get picked up immediately
      annotations:
        helmRevision: "{{ .Release.Revision }}"
    spec:
      {{ if or .Values.features.useDeletePodsServiceAccount .Values.features.useSccOnOpenShift -}}
      serviceAccountName: {{ .Release.Name }}
      {{ end -}}
      volumes:
        - name: hazeltest-config
          configMap:
            name: {{ template "hazeltest.fullname" . }}-config
      containers:
        - name: hazeltest
          image: "{{ .Values.image.registry }}/{{ .Values.image.organization }}/{{ .Values.image.repository }}:{{ .Values.image.tag }}@sha256:{{ .Values.image.digest }}"
          {{ if .Values.startupArgs -}}
          args: [{{ join "," .Values.startupArgs }}]
          {{ else }}
          args: [ "-config-file=/data/config/custom-config.yaml" ]
          {{ end -}}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.reachability.containerPort }}
          livenessProbe:
            httpGet:
              port: http
              path: /liveness
          readinessProbe:
            httpGet:
              port: http
              path: /readiness
          resources:
{{ toYaml .Values.resources | indent 12 }}
          env:
            - name: HZ_CLUSTER
              value: {{ .Values.env.hzCluster }}
            - name: HZ_MEMBERS
              value: {{ .Values.env.hzMembers }}
            - name: LOG_LEVEL
              value: {{ .Values.env.logLevel }}
          volumeMounts:
            - name: hazeltest-config
              mountPath: /data/config
          {{ if .Values.features.useSccOnOpenShift  -}}
          securityContext:
            capabilities:
              add:
                - SYS_PTRACE
          {{ end -}}

