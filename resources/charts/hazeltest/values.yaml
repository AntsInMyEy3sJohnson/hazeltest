replicaCount: 1

app:
  # 0.2.3
  image: antsinmyey3sjohnson/hazeltest@sha256:c5c1e2c9ffc6407c779badeca321c4144269de33b6038e2e2375a98ffa1fb3a2
  imagePullPolicy: IfNotPresent
  httpPort: 8080
  resources:
    requests: 
      cpu: "500m"
      memory: "64M"
    limits:
      cpu: "1"
      memory: "128M"

env:
  # Name of the Hazelcast cluster to connect to -- usually configured in Hazelcast by means of the "hazelcast.cluster-name" property
  hzCluster: "hazelcastplatform"
  # Can be IP addresses or Kubernetes services names
  # Accepts multiple comma-separated values ("service1,service2,service3")
  hzMembers: "hazelcastimdg.hazelcastplatform.svc.cluster.local:5701"
  # Set this to TRACE if you want to make the people running your IT department's logging platform very angry
  logLevel: INFO

config:
  maptests:
    pokedex:
      # If set to 'false', the PokedexRunner will not be executed
      enabled: false
      # The runner will spawn one goroutine for each map
      numMaps: 5
      # If set to 'true', each of the <numMaps> goroutines will use its own map name, thus effectively accessing its own map
      # In other words, if this is set to 'true', this PokedexRunner will use <numMaps> distinct maps in Hazelcast; if it is set
      # to 'false', the <numMaps> goroutines will access the same map
      # For the PokedexRunner, this will result in a higher number of maps, each containing a smaller number of keys
      # Note: Both the client ID and the currently active goroutine/number are still part of the map keys, so no matter how 
      # the following two properties are set, different clients and goroutines within clients will not act on each other's keys
      appendMapIndexToMapName: true
      # If so to 'true', the PokedexRunner will append the ID of its Hazeltest instance to the map name such that it gets its own map in Hazelcast; 
      # if set to 'false', then this PokedexRunner will share its maps with the maps created by PokedexRunners in other Hazeltest instances
      # Set this to 'false' if you would like to make all Hazeltest instances access the same map or maps
      appendClientIdToMapName: true
      # The number of test loops (e.g., ingest-read-delete) to execute in each map goroutine
      numRuns: 10000
      mapPrefix:
        enabled: true
        # The prefix will be put in front of the map name as-is, so no additional underscores or other 
        # characters will be added
        prefix: "ht_"
      # Using sleeps, the pace with which this runner interacts with Hazelcast can be slowed down
      sleeps:
        # Can be enabled to make the test loop sleep for the given duration after one batch of actions (e.g., "ingest x elements") has 
        # finished, meaning the next action batch will start only after a sleep of <durationMs>
        betweenActionBatches:
          enabled: false
          durationMs: 200
        # Can be enabled to make the test loop sleep for the given duration after each of the <numRuns>. One run consists of three actions (e.g. ingest-read-delete),
        # so use this setting to tell the test loop to sleep after having finished the last action of run <n> and before commencing with the first action of run <n+1>
        betweenRuns:
          enabled: true
          durationMs: 200
    load:
      # Same as for PokedexRunner
      enabled: true
      # Same as for PokedexRunner
      numMaps: 10
      # In contrast to the PokedexRunner, whose data set is limited by the number of Pokémon contained in the first-generation Pokédex (151), the LoadRunner can create
      # arbitrarily many entries, and the 'numEntriesPerMap' controls how many entries it will create
      numEntriesPerMap: 5000
      # The payload for each of the <numEntriesPerMap> entries the LoadRunner creates is a random string, whose size in bytes is controlled by the 'payloadSizeBytes' property
      payloadSizeBytes: 100000
      # Same as for PokedexRunner
      appendMapIndexToMapName: false
      # Same as for PokedexRunner
      appendClientIdToMapName: false
      # Same as for PokedexRunner
      numRuns: 10000
      # Same as for PokedexRunner
      mapPrefix:
        enabled: true
        prefix: "xx_"
      # All properties under this key work in exactly the same way as for the PokedexRunner.
      sleeps:
        betweenActionBatches:
          enabled: false
          durationMs: 200
        betweenRuns:
          enabled: false
          durationMs: 200
